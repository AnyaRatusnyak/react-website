{"version":3,"file":"static/js/672.b92df4af.chunk.js","mappings":"wLACA,G,QAAA,CAAgB,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,SAAW,4B,SCM5I,EAJgB,SAACA,GACf,OAAO,gBAAKC,UAAWC,EAAAA,QAAU,SAAEF,EAAMG,SAC3C,E,UCQA,EATmB,SAACH,GAClB,IAAII,EAAO,YAAcJ,EAAMK,GAC/B,OACE,gBAAKJ,UAAWC,EAAAA,OAAW,IAAMA,EAAAA,OAAS,UACxC,SAAC,KAAO,CAACI,GAAIF,EAAK,SAAEJ,EAAMO,QAGhC,E,iDCuBMC,GAAcC,EAAAA,EAAAA,GAAiB,IAmB/BC,GAAsBC,EAAAA,EAAAA,GAAU,CAAEC,KAAM,wBAAlBD,EAlBL,SAACX,GACtB,OACE,kBAAMa,SAAUb,EAAMc,aAAa,WACjC,0BACE,SAACC,EAAA,EAAK,CACJC,UAAWC,EAAAA,GACXV,KAAK,iBACLW,YAAY,qBACZC,SAAU,CAACC,EAAAA,EAAUZ,QAGzB,0BACE,mBAAQP,UAAU,oBAAmB,sBAI7C,IAMA,EAhDgB,SAACD,GACf,IAAIqB,EAAkBrB,EAAMsB,YAAYC,QAAQC,KAAI,SAACC,GAAC,OACpD,SAAC,EAAU,CAAClB,KAAMkB,EAAElB,KAAMF,GAAIoB,EAAEpB,IAAM,IAEpCqB,EAAmB1B,EAAMsB,YAAYK,SAASH,KAAI,SAACI,GAAC,OACtD,SAAC,EAAO,CAACzB,QAASyB,EAAEzB,SAAW,IAMjC,OAAKH,EAAM6B,QAGT,iBAAK5B,UAAWC,EAAAA,QAAU,WACxB,gBAAKD,UAAWC,EAAAA,aAAe,SAAEmB,KACjC,gBAAKpB,UAAWC,EAAAA,SAAW,UACzB,yBAAMwB,OAGR,SAAChB,EAAmB,CAACG,SAZL,SAACiB,GACnB9B,EAAM+B,YAAYD,EAAOE,eAC3B,QAC0B,SAAC,KAAQ,CAAC1B,GAAI,UAY1C,E,UCZA,GAAe2B,E,QAAAA,KACbC,EAAAA,EAAAA,KAfoB,SAACC,GACrB,MAAO,CACLb,YAAaa,EAAMb,YAEvB,IAEyB,SAACc,GACxB,MAAO,CACLL,YAAa,SAACC,GACZI,GAASC,EAAAA,EAAAA,GAAmBL,GAC9B,EAEJ,IAIEM,EAAAA,EAFF,CAGEC,E,kJCnBEC,EAA6B,SAACL,GAAK,MAAM,CAC3CN,OAAQM,EAAMM,KAAKZ,OACpB,EAEYS,EAAmB,SAACI,GAAe,IACxCC,EAAiB,qGAIpB,OAJoB,8BACrB,WACE,OAAKC,KAAK5C,MAAM6B,QACT,SAACa,GAAS,UAAKE,KAAK5C,SADI,SAAC,KAAQ,CAACM,GAAI,UAE/C,KAAC,EAJoB,CAASuC,EAAAA,WAShC,OAHqCX,EAAAA,EAAAA,IAAQM,EAARN,CACnCS,EAGJ,C","sources":["webpack://react-website/./src/components/Dialogs/Dialogs.module.css?1b2e","components/Dialogs/Message/Message.jsx","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx","hoc/withAuthRedirect.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__uXZnV\",\"dialogsItems\":\"Dialogs_dialogsItems__ZgxGZ\",\"active\":\"Dialogs_active__YDGc3\",\"messages\":\"Dialogs_messages__5M0c-\"};","import React from \"react\";\r\nimport s from \"./../Dialogs.module.css\";\r\n\r\nconst Message = (props) => {\r\n  return <div className={s.message}>{props.message}</div>;\r\n};\r\n\r\nexport default Message;\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport s from \"./../Dialogs.module.css\";\r\n\r\nconst DialogItem = (props) => {\r\n  let path = \"/dialogs/\" + props.id;\r\n  return (\r\n    <div className={s.dialog + \" \" + s.active}>\r\n      <NavLink to={path}>{props.name}</NavLink>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DialogItem;\r\n","import React from \"react\";\r\nimport s from \"./Dialogs.module.css\";\r\nimport Message from \"./Message/Message\";\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { Textarea } from \"../common/formsControls/formsControls\";\r\nimport { maxLengthCreator, required } from \"../../utils/validators/validators\";\r\n\r\nconst Dialogs = (props) => {\r\n  let dialogsElements = props.dialogsPage.dialogs.map((d) => (\r\n    <DialogItem name={d.name} id={d.id} />\r\n  ));\r\n  let messagesElements = props.dialogsPage.messages.map((m) => (\r\n    <Message message={m.message} />\r\n  ));\r\n\r\n  let addNewMessage = (values) => {\r\n    props.sendMessage(values.newMessageBody);\r\n  };\r\n  if (!props.isAuth) return <Navigate to={\"/login\"} />;\r\n\r\n  return (\r\n    <div className={s.dialogs}>\r\n      <div className={s.dialogsItems}>{dialogsElements}</div>\r\n      <div className={s.messages}>\r\n        <div>{messagesElements}</div>\r\n      </div>\r\n\r\n      <AddMessageFormRedux onSubmit={addNewMessage} />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst maxLength50 = maxLengthCreator(50);\r\nconst AddMessageForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div>\r\n        <Field\r\n          component={Textarea}\r\n          name=\"newMessageBody\"\r\n          placeholder=\"Enter your message\"\r\n          validate={[required, maxLength50]}\r\n        />\r\n      </div>\r\n      <div>\r\n        <button className=\"btn btn-secondary\">Send</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst AddMessageFormRedux = reduxForm({ form: \"dialodAddMessageForm\" })(\r\n  AddMessageForm\r\n);\r\n\r\nexport default Dialogs;\r\n","import { sendMessageCreator } from \"../../redux/dialogs-reducer\";\r\nimport { connect } from \"react-redux\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\r\nimport { compose } from \"redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    dialogsPage: state.dialogsPage,\r\n  };\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    sendMessage: (newMessageBody) => {\r\n      dispatch(sendMessageCreator(newMessageBody));\r\n    },\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, mapDispatchToProps),\r\n  withAuthRedirect\r\n)(Dialogs);\r\n","import React from \"react\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n  isAuth: state.auth.isAuth,\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n  class RedirectComponent extends React.Component {\r\n    render() {\r\n      if (!this.props.isAuth) return <Navigate to={\"/login\"} />;\r\n      return <Component {...this.props} />;\r\n    }\r\n  }\r\n  let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(\r\n    RedirectComponent\r\n  );\r\n  return ConnectedAuthRedirectComponent;\r\n};\r\n"],"names":["props","className","s","message","path","id","to","name","maxLength50","maxLengthCreator","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","placeholder","validate","required","dialogsElements","dialogsPage","dialogs","map","d","messagesElements","messages","m","isAuth","values","sendMessage","newMessageBody","compose","connect","state","dispatch","sendMessageCreator","withAuthRedirect","Dialogs","mapStateToPropsForRedirect","auth","Component","RedirectComponent","this","React"],"sourceRoot":""}